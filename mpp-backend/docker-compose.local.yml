version: '3.7'

services:
  mpp-backend:
    build:
      context: .
    image: kaushikjadhavajackus/mpp-backend:backend
    container_name: mpp-backend
    ports:
      - 8000:8000
    command: gunicorn MPP_API.wsgi:application --bind 0.0.0.0:8000 --log-level=debug --timeout 9000 --workers=1 --threads=8 
    expose:
      - 8000
    volumes:
      - static_volume:/static
      - /etc/localtime:/etc/localtime
    env_file:
      - ./MPP_API/.env.dev
    depends_on:
      - db
    # logging:
    #   driver: "awslogs"
    #   options:
    #     awslogs-region: "ap-south-1"
    #     awslogs-group: "mpp-be-log"
    #     awslogs-stream: "mpp-be-log-stream"

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/
    env_file:
      - ./MPP_API/.env.dev

  # nginx:
  #   build: ./nginx
  #   image: kaushikjadhavajackus/mpp-backend:nginx
  #   container_name: nginx
  #   volumes:
  #     - static_volume:/static
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   ports:
  #     - 80:80
  #     - 443:443
  #   depends_on:
  #     - mpp-backend
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"


  redis:
    image: "redis:alpine"


  celery:
    build: .
    container_name: celery
    command: celery -A MPP_API worker -l INFO
    depends_on:
      - db
      - redis
    env_file:
      - ./MPP_API/.env.dev

  celery-beat:
    build: .
    container_name: celery-beat
    command: celery -A MPP_API beat -l INFO
    depends_on:
      - db
      - redis
    env_file:
      - ./MPP_API/.env.dev

volumes:
  postgres_data:
  static_volume:
